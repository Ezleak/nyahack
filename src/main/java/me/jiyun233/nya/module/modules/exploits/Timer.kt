package me.jiyun233.nya.module.modules.exploits

import me.jiyun233.nya.event.events.client.PacketEvent
import me.jiyun233.nya.module.Category
import me.jiyun233.nya.module.Module
import me.jiyun233.nya.module.ModuleInfo
import me.jiyun233.nya.settings.BooleanSetting
import me.jiyun233.nya.settings.FloatSetting
import net.minecraft.network.Packet
import net.minecraft.network.play.client.CPacketPlayer
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent
import java.util.concurrent.CopyOnWriteArrayList

@ModuleInfo(name = "Timer", descriptions = "Change game tick speed", category = Category.EXPLOITS)
object Timer : Module() {
    private var tickNormal: FloatSetting = registerSetting("Speed", 1.2f, 1f, 10f)
    private var bypass: BooleanSetting = registerSetting("Bypass", true)
    var i = 0
    var x = 0

    @SubscribeEvent
    fun onPacket(event: PacketEvent.Send) {
        if (fullNullCheck()) {
            return
        }
        if (event.getPacket<Packet<*>>() is CPacketPlayer) {
            if (!packetList.contains(event.getPacket())) {
                packetList.add(event.getPacket())
            }
        }
    }

    override fun onDisable() {
        if (fullNullCheck()) {
            return
        }
        mc.timer.tickLength = 50.0f
        packetList.clear()
    }

    override fun onEnable() {
        if (fullNullCheck()) {
            return
        }
        mc.timer.tickLength = 50.0f
        packetList.clear()
    }

    override fun onUpdate() {
        if (fullNullCheck()) {
            return
        }
        if (bypass.value) {
            if (i <= 50) {
                i++
                mc.timer.tickLength = 50.0f / tickNormal.value
                x = 0F
            } else {
                if (x <= 50 - 50 / 2 / 2) {
                    x++
                    mc.timer.tickLength = 50.0f
                } else {
                    i = 0
                }
            }
        } else {
            mc.timer.tickLength = 50.0f / tickNormal.value
        }
    }

    private var packetList = CopyOnWriteArrayList<Packet<*>>()
}